{
  "version": 2,
  "cmakeMinimumRequired": {
    "major": 3,
    "minor": 14,
    "patch": 0
  },
  "configurePresets": [
    {
      "name": "cmake-pedantic",
      "hidden": true,
      "warnings": {
        "dev": true,
        "deprecated": true,
        "uninitialized": true,
        "unusedCli": true,
        "systemVars": false
      },
      "errors": {
        "dev": false,
        "deprecated": false
      }
    },
    {
      "name": "gcc-compiler",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_C_COMPILER": "gcc",
        "CMAKE_CXX_COMPILER": "g++"
      }
    },
    {
      "name": "clang-compiler",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_C_COMPILER": "clang",
        "CMAKE_CXX_COMPILER": "clang++"
      }
    },
    {
      "name": "dev-mode",
      "hidden": true,
      "inherits": "cmake-pedantic",
      "cacheVariables": {
        "benlib_DEVELOPER_MODE": "ON"
      }
    },
    {
      "name": "cppcheck",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_CPPCHECK": "cppcheck;--inline-suppr;--suppress=*:${sourceDir}/external/*",
        "CMAKE_C_CPPCHECK": "cppcheck;--inline-suppr;$--suppress=*:${sourceDir}/external/*"
      }
    },
    {
      "name": "clang-tidy",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_CLANG_TIDY": "clang-tidy;--header-filter='^(?!.*(third_party|external)).*'",
        "CMAKE_C_CLANG_TIDY": "clang-tidy;--header-filter='^(?!.*(third_party|external)).*'"
      }
    },
    {
      "name": "ci-std",
      "description": "This preset makes sure the project actually builds with at least the specified standard",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_EXTENSIONS": "ON",
        "CMAKE_CXX_STANDARD": "23",
        "CMAKE_CXX_STANDARD_REQUIRED": "ON",
        "CMAKE_C_EXTENSIONS": "ON",
        "CMAKE_C_STANDARD": "17",
        "CMAKE_C_STANDARD_REQUIRED": "ON"
      }
    },
    {
      "name": "flags-gcc-clang",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_FLAGS": "-U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=3 -pipe -fstack-protector-strong -fstack-clash-protection -Wall -Wextra -Wpedantic -Wconversion -Wsign-conversion -Wcast-qual -Wformat=2 -Wundef -Wshadow -Wcast-align -Wunused -Wnull-dereference -Wdouble-promotion -Wimplicit-fallthrough -Wextra-semi -Woverloaded-virtual -Wnon-virtual-dtor -Wold-style-cast -Wformat-security",
        "CMAKE_C_FLAGS": "-U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=3 -pipe -fstack-protector-strong -fstack-clash-protection -Wall -Wextra -Wpedantic -Wconversion -Wsign-conversion -Wcast-qual -Wformat=2 -Wundef -Wshadow -Wcast-align -Wunused -Wnull-dereference -Wdouble-promotion -Wformat-security",
        "CMAKE_EXE_LINKER_FLAGS": "-Wl,--allow-shlib-undefined,--as-needed,-z,noexecstack,-z,relro,-z,now",
        "CMAKE_SHARED_LINKER_FLAGS": "-Wl,--allow-shlib-undefined,--as-needed,-z,noexecstack,-z,relro,-z,now"
      }
    },
    {
      "name": "flags-appleclang",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_FLAGS": "-pipe -fstack-protector-strong -Wall -Wextra -Wpedantic -Wconversion -Wsign-conversion -Wcast-qual -Wformat=2 -Wundef -Wshadow -Wcast-align -Wunused -Wnull-dereference -Wdouble-promotion -Wimplicit-fallthrough -Wextra-semi -Woverloaded-virtual -Wnon-virtual-dtor -Wold-style-cast",
        "CMAKE_C_FLAGS": "-pipe -fstack-protector-strong -Wall -Wextra -Wpedantic"
      }
    },
    {
      "name": "flags-gcc-clang-coverage",
      "hidden": true,
      "cacheVariables": {
        "ENABLE_COVERAGE": "ON",
        "CMAKE_CXX_FLAGS": "-O0 -g3 --coverage -fno-inline -fno-inline-small-functions -fno-default-inline",
        "CMAKE_C_FLAGS": "-O0 -g3 --coverage -fno-inline -fno-inline-small-functions -fno-default-inline",
        "CMAKE_EXE_LINKER_FLAGS_COVERAGE": "--coverage",
        "CMAKE_SHARED_LINKER_FLAGS_COVERAGE": "--coverage"
      }
    },
    {
      "name": "flags-gcc-clang-sanitize",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_FLAGS": "-Og -U_FORTIFY_SOURCE -g3 -fsanitize=address,undefined,leak -fno-omit-frame-pointer -fno-common",
        "CMAKE_C_FLAGS": "-Og -U_FORTIFY_SOURCE -g3"
      }
    },
    {
      "name": "flags-msvc",
      "description": "Note that all the flags after /W4 are required for MSVC to conform to the language standard",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_FLAGS": "/sdl /guard:cf /utf-8 /diagnostics:caret /w14165 /w44242 /w44254 /w44263 /w34265 /w34287 /w44296 /w44365 /w44388 /w44464 /w14545 /w14546 /w14547 /w14549 /w14555 /w34619 /w34640 /w24826 /w14905 /w14906 /w14928 /w45038 /W4 /permissive- /volatile:iso /Zc:inline /Zc:preprocessor /Zc:enumTypes /Zc:lambda /Zc:__cplusplus /Zc:externConstexpr /Zc:throwingNew /EHsc",
        "CMAKE_EXE_LINKER_FLAGS": "/machine:x64 /guard:cf"
      }
    },
    {
      "name": "flags-cuda",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CUDA_FLAGS": "--default-stream per-thread -Xfatbin=-compress-all -arch=all-major -Xcompiler=-Wall,-Wextra,-Wconversion,-Wsign-conversion,-Wcast-qual,-Wundef,-Wshadow,-Wunused,-Wnull-dereference,-Wdouble-promotion,-Wimplicit-fallthrough,-Wextra-semi,-Woverloaded-virtual,-Wnon-virtual-dtor,-Wformat-security",
        "CMAKE_CUDA_ARCHITECTURES": "50;52;53;60;61;62;70;72;75;80;86;87;89;90",
        "CUDA_PROPAGATE_HOST_FLAGS": "OFF",
        "CMAKE_CUDA_SEPARABLE_COMPILATION": "ON"
      }
    },
    {
      "name": "flags-gcc-clang-debugger",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CXX_FLAGS": "-O0 -g3 -ggdb3 -Wall -Wextra -Wpedantic -pg",
        "CMAKE_C_FLAGS": "-O0 -g3 -ggdb3 -Wall -Wextra -Wpedantic -pg"
      }
    },
    {
      "name": "coverage-linux",
      "binaryDir": "${sourceDir}/build/coverage",
      "inherits": ["dev-mode", "ci-std", "flags-gcc-clang-coverage"],
      "generator": "Unix Makefiles",
      "cacheVariables": {
        "COVERAGE_HTML_COMMAND": "",
        "COVERAGE_TRACE_COMMAND": "",
        "ENABLE_COVERAGE": "ON"
      }
    },
    {
      "name": "sanitize-linux",
      "binaryDir": "${sourceDir}/build/sanitize",
      "generator": "Unix Makefiles",
      "inherits": ["dev-mode", "ci-std", "flags-gcc-clang-sanitize"],
      "cacheVariables": {
        "ENABLE_SANITIZERS": "ON"
      },
      "environment": {
        "ASAN_OPTIONS": "strict_string_checks=1 detect_stack_use_after_return=1 check_initialization_order=1 strict_init_order=1 detect_leaks=1",
        "UBSAN_OPTIONS": "print_stacktrace=1"
      },
      "hidden": true
    },
    {
      "name": "gprof-linux",
      "binaryDir": "${sourceDir}/build/gprof",
      "generator": "Unix Makefiles",
      "inherits": ["ci-std", "flags-gcc-clang-debugger", "dev-mode"],
      "hidden": false
    },
    {
      "name": "debugger-linux",
      "binaryDir": "${sourceDir}/build/debugger",
      "generator": "Unix Makefiles",
      "inherits": ["ci-std", "flags-gcc-clang-debugger", "dev-mode"],
      "hidden": false,
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Debug"
      }
    },
    {
      "name": "dev-common",
      "hidden": true,
      "inherits": ["dev-mode", "clang-tidy", "cppcheck"],
      "cacheVariables": {
        "BUILD_MCSS_DOCS": "ON"
      }
    },
    {
      "name": "dev-linux",
      "binaryDir": "${sourceDir}/build/dev-linux",
      "inherits": ["dev-common", "ci-linux"],
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Debug",
        "CMAKE_EXPORT_COMPILE_COMMANDS": "ON"
      }
    },
    {
      "name": "dev-darwin",
      "binaryDir": "${sourceDir}/build/dev-darwin",
      "inherits": ["dev-common", "ci-darwin"],
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Debug",
        "CMAKE_EXPORT_COMPILE_COMMANDS": "ON"
      }
    },
    {
      "name": "dev-win64",
      "binaryDir": "${sourceDir}/build/dev-win64",
      "inherits": ["dev-common", "ci-win64"],
      "environment": {
        "UseMultiToolTask": "true",
        "EnforceProcessCountAcrossBuilds": "true"
      }
    },
    {
      "name": "ci-linux",
      "generator": "Unix Makefiles",
      "hidden": true,
      "inherits": ["flags-gcc-clang", "ci-std"],
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Debug"
      }
    },
    {
      "name": "ci-darwin",
      "generator": "Unix Makefiles",
      "hidden": true,
      "inherits": ["flags-appleclang", "ci-std"],
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Debug"
      }
    },
    {
      "name": "ci-win64",
      "inherits": ["flags-msvc", "ci-std"],
      "generator": "Visual Studio 17 2022",
      "architecture": "x64",
      "hidden": true
    },
    {
      "name": "ci-cuda",
      "description": "This preset makes sure the project actually builds with at least the specified standard",
      "inherits": ["flags-cuda"],
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CUDA_STANDARD": "17",
        "CMAKE_CUDA_STANDARD_REQUIRED": "ON",
        "CMAKE_CUDA_EXTENSIONS": "OFF"
      }
    },
    {
      "name": "ci-build",
      "binaryDir": "${sourceDir}/build",
      "hidden": true
    },
    {
      "name": "ci-coverage",
      "inherits": ["coverage-linux"]
    },
    {
      "name": "ci-sanitize",
      "inherits": ["ci-build", "sanitize-linux", "dev-mode"]
    },
    {
      "name": "ci-macos",
      "inherits": ["ci-build", "ci-darwin", "dev-mode"]
    },
    {
      "name": "ci-ubuntu",
      "inherits": ["ci-build", "ci-linux", "dev-common"]
    },
    {
      "name": "ci-windows",
      "inherits": ["ci-build", "ci-win64", "dev-mode"]
    }
  ]
}
